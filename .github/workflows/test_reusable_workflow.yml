name: Call Deploy release workflow

on:
  workflow_dispatch:
    inputs:
      merge-strategy:
        description: 'Merge strategy and strategy options. Used only in case of merge conflicts'
        required: false
        default: ''
        type: string
      first-release-version:
        description: 'Version number to use if this is the first release'
        required: false
        default: 0.1.0rc0
        type: string
      bump-rule:
        description: 'Bump rule for computing next release version number.'
        required: false
        default: 'prerelease'
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease
      run-tests-wait:
        description: 'Wait time to run test after merge to main'
        required: false
        default: 60
        type: number
      publish-to-test-pypi:
        description: 'Set to true if you want to publish to https://test.pypi.org/legacy/ instead of pypi.org'
        required: false
        default: false
        type: boolean
      git-token-name:
        description: 'Name of the variable that holds the github access token'
        required: false
        default: 'AUTO_PROJECT_PAT'
        type: string
      pypi-token-name:
        description: 'Name of the variable that holds the github access token'
        required: false
        default: 'PYPI_TOKEN'
        type: string

defaults:
  run:
    shell: bash

env:
  LANG: en_US.utf-8
  LC_ALL: en_US.utf-8
  PYTHON_VERSION: '3.10'
  PROJECT_NAME: test-github-action-call-reusable

jobs:
  call-deploy-release:
    permissions:
      contents: write  # To push a branch
      pull-requests: write  # To create a PR from that branch

    uses: schandrika/github-tooling/.github/workflows/deploy-release.yml@main
    with:
      merge-strategy: ${{ inputs.merge-strategy }}
      first-release-version: ${{ inputs.first-release-version }}
      bump-rule: ${{ inputs.bump-rule }}
      run-tests-wait: ${{ number(inputs.run-tests-wait) }}
      publish-to-test-pypi: ${{ inputs.publish-to-test-pypi }}
    secrets:
#      git-token: ${{ secrets.GA_PAT_TOKEN }}
#      pypi-token: ${{ secrets.TEST_PYPI_TOKEN }}
      git-token: ${{ format('secrets.{0}', inputs.git-token-name) }}
      pypi-token: ${{ format('secrets.{0}', inputs.pypi-token-name) }}
